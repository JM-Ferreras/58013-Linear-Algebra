{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNwIWVgJ1Le8XU/+80cPvMd",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/JM-Ferreras/58013-Linear-Algebra/blob/main/Vector%2C%20Spaces%20and%20Operators\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 38,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "R4iwdARJiwoO",
        "outputId": "652ea9ad-027c-45ce-ab80-ca9780b7d5c5"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Vector A is [4 3]\n",
            "Vector B is [ 2 -5]\n"
          ]
        }
      ],
      "source": [
        "import numpy as np\n",
        "A=np.array([4,3])\n",
        "B=np.array([2,-5])\n",
        "\n",
        "print('Vector A is', A)\n",
        "print('Vector B is', B)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "ball1=np.array([[1],[2],[3]])\n",
        "ball2=np.array([[0],[1],[-1]])\n",
        "print(ball1)\n",
        "print(ball2)\n",
        "ball=np.shape(ball1+ball2)\n",
        "print(ball)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zqajumiFjPg7",
        "outputId": "a41c1abd-be89-4862-8827-21e6734f532a"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[1]\n",
            " [2]\n",
            " [3]]\n",
            "[[ 0]\n",
            " [ 1]\n",
            " [-1]]\n",
            "(3, 1)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "A=np.array([4,3])\n",
        "B=np.array([2,-5])\n",
        "r=np.add(A,B)\n",
        "print(r)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "82haF-Yns0mZ",
        "outputId": "e36d3980-3b78-4a70-c344-967af24482e1"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[ 6 -2]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#scalar\n",
        "s = np.array([2])\n",
        "A=np.array([4,3])\n",
        "v=s*A\n",
        "print(v)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bsvELMiSubgO",
        "outputId": "c92a5155-050a-4ca7-a743-5e34f913c484"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[8 6]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#cross\n",
        "import numpy as np\n",
        "A=np.array([4,3])\n",
        "B=np.array([[2],[-5]])\n",
        "v=A*B\n",
        "print(v)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZzFWfdHCwK88",
        "outputId": "b027f58e-57c8-49b5-c850-6c4c7a45e603"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[  8   6]\n",
            " [-20 -15]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#property of matrix\n",
        "#identity matrix\n",
        "c=np.eye(3,3)\n",
        "print(c)\n",
        "\n",
        "#Zero matrix\n",
        "d=np.zeros([5,5])\n",
        "print(d)\n",
        "\n",
        "#full matrix\n",
        "e=np.full((3,3),7)\n",
        "print(e)\n",
        "\n",
        "#transpose matrix\n",
        "f=np.transpose(A)\n",
        "print(f)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NdzJaJoezcTG",
        "outputId": "9fa6fbb2-5cb3-4d0c-a197-34a0e11e55b1"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[1. 0. 0.]\n",
            " [0. 1. 0.]\n",
            " [0. 0. 1.]]\n",
            "[[0. 0. 0. 0. 0.]\n",
            " [0. 0. 0. 0. 0.]\n",
            " [0. 0. 0. 0. 0.]\n",
            " [0. 0. 0. 0. 0.]\n",
            " [0. 0. 0. 0. 0.]]\n",
            "[[7 7 7]\n",
            " [7 7 7]\n",
            " [7 7 7]]\n",
            "[4 3]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "A= np.array([2,3])\n",
        "B=np.array([1,7])\n",
        "output=np.cross(A,B)\n",
        "print(output)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ntljRIHy2gdO",
        "outputId": "74f24ed5-c745-4884-881c-912f3dbf31b8"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "11\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "lTMogNB30-Dn"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}